plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'ru.indorm1992'
version = ''
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = '1.3.0.Final'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.mapstruct:mapstruct-jdk8:' + mapstructVersion

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.mapstruct:mapstruct-processor:' + mapstructVersion
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:' + mapstructVersion

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

// указываем настройку, запрещающую компилятору пропускать несмапленные mapstruct'ом поля
compileJava.options.compilerArgs = ['-Amapstruct.unmappedTargetPolicy=ERROR']

// -parameters добавляется, но десериализация не проходит
//compileJava {
	//options.encoding = 'UTF-8'
	//options.compilerArgs += ['-parameters']
	//println options.compilerArgs
//}

task moveRest(type: Copy, dependsOn: build) {
	delete "docker/services/rest/chat.jar"
	from "build/libs/chat.jar"
	into "docker/services/rest"
}

task moveNginx(type: Copy) {
	from "src/main/resources/nginx"
	into "docker/services/js"
}

task moveJs(type: Copy) {
	from "src/main/resources/static"
	into "docker/services/js/dist"
}

task buildForDocker(dependsOn: [clean, moveRest, moveJs, moveNginx])

test {
	useJUnitPlatform()
}
